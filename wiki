
Para criar uma Wiki de Repositórios do GitHub utilizando React, você pode aproveitar a API do GitHub para buscar informações sobre repositórios e exibi-las em um aplicativo web. Vou orientar você na criação de um aplicativo React básico que lista repositórios do GitHub.

Passo 1: Configurar um projeto React

Certifique-se de ter o Node.js instalado e execute os seguintes comandos no terminal:

bash
Copy code
npx create-react-app github-wiki
cd github-wiki
Passo 2: Criar o componente React para a Wiki

Substitua o conteúdo do arquivo App.js pelo seguinte código:

javascript
Copy code
import React, { useState } from 'react';
import './App.css';

function App() {
  const [searchQuery, setSearchQuery] = useState('');
  const [repos, setRepos] = useState([]);
  const [error, setError] = useState('');

  const handleChange = (e) => {
    setSearchQuery(e.target.value);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch(`https://api.github.com/search/repositories?q=${searchQuery}`);
      if (!response.ok) {
        throw new Error('Erro ao buscar repositórios');
      }
      const data = await response.json();
      setRepos(data.items);
      setError('');
    } catch (err) {
      setError('Erro ao buscar repositórios');
      setRepos([]);
    }
  };

  return (
    <div className="App">
      <h1>Wiki de Repositórios do GitHub</h1>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Digite o nome do repositório"
          value={searchQuery}
          onChange={handleChange}
        />
        <button type="submit">Buscar</button>
      </form>
      {error && <p>{error}</p>}
      <ul>
        {repos.map((repo) => (
          <li key={repo.id}>
            <a href={repo.html_url} target="_blank" rel="noopener noreferrer">
              {repo.full_name}
            </a>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
Passo 3: Estilizar o componente

Crie um arquivo App.css no mesmo diretório onde está o App.js e adicione estilos básicos para a aplicação:

css
Copy code
.App {
  text-align: center;
  margin-top: 50px;
}

form {
  margin-bottom: 20px;
}

input {
  padding: 8px;
  margin-right: 10px;
}

button {
  padding: 8px 20px;
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
}

ul {
  list-style: none;
  padding: 0;
}

li {
  margin-bottom: 10px;
}

a {
  text-decoration: none;
  color: #007bff;
}
Passo 4: Executar o aplicativo

No terminal, dentro do diretório do projeto, execute:

bash
Copy code
npm start
Isso iniciará o servidor de desenvolvimento React. Abra o navegador e acesse http://localhost:3000 para ver a aplicação.
