Passo 1: Configurar um projeto React

Se você já possui um projeto React, pode prosseguir para o próximo passo. Caso contrário, siga os passos abaixo para criar um novo projeto React:

Certifique-se de ter o Node.js instalado e execute os seguintes comandos no terminal:

bash
Copy code
npx create-react-app dio-cadastro
cd dio-cadastro
Passo 2: Criar o componente React para a tela de cadastro

Substitua o conteúdo do arquivo App.js pelo seguinte código:

javascript
Copy code
import React, { useState } from 'react';
import './App.css';

function App() {
  const [formData, setFormData] = useState({
    nome: '',
    email: '',
    senha: ''
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Aqui você pode implementar a lógica para enviar os dados do formulário
    console.log('Dados do formulário:', formData);
    // Resetar o estado do formulário após o envio
    setFormData({
      nome: '',
      email: '',
      senha: ''
    });
  };

  return (
    <div className="App">
      <h1>Cadastro na Plataforma Dio</h1>
      <form onSubmit={handleSubmit}>
        <div>
          <label htmlFor="nome">Nome:</label>
          <input
            type="text"
            id="nome"
            name="nome"
            value={formData.nome}
            onChange={handleChange}
          />
        </div>
        <div>
          <label htmlFor="email">E-mail:</label>
          <input
            type="email"
            id="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
          />
        </div>
        <div>
          <label htmlFor="senha">Senha:</label>
          <input
            type="password"
            id="senha"
            name="senha"
            value={formData.senha}
            onChange={handleChange}
          />
        </div>
        <button type="submit">Cadastrar</button>
      </form>
    </div>
  );
}

export default App;
Passo 3: Estilizar o componente

Crie um arquivo App.css no mesmo diretório onde está o App.js e adicione estilos básicos para a aplicação:

css
Copy code
.App {
  text-align: center;
  margin-top: 50px;
}

form {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 300px;
  margin: auto;
}

div {
  margin-bottom: 10px;
}

label {
  font-weight: bold;
  margin-right: 5px;
}

input {
  padding: 8px;
  margin-left: 5px;
}

button {
  padding: 8px 20px;
  margin-top: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
}
Passo 4: Executar o aplicativo

No terminal, dentro do diretório do projeto, execute:

bash
Copy code
npm start
Isso iniciará o servidor de desenvolvimento React. Abra o navegador e acesse http://localhost:3000 para ver a tela de cadastro.
